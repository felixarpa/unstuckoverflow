openapi: '3.0.0'

info:
  description: Asking is faster than stackOverflow if you know who to ask.
  version: '1.0'
  title: (Un)StuckOverflow API

servers:
  - url: http://localhost:8081
    description: Localhost endpoint.

tags:
  - name: user
    description: endpoint for managing user options.
  - name: help
    description: endpoint to check which kind of help a user needs
  - name: tag
    description: endpoint to obtain tags of skills.


paths:
  /user:
    get:
      tags:
        - user
      summary: Retrieve user Information
      description: Invoke this endpoint to retrieve information of a given user.
      operationId: src.api.user.get
      parameters:
        - name: user_id
          in: query
          description: Specifies the user to retrieve.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Standard (Un)StuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.
    post:
      tags:
        - user
      summary: Create a user
      description: Invoke this endpoint to create a new user given its information.
      operationId: src.api.user.post
#      requestBody:
#        required: true
#        description: Body wrapper for the request.
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/UserBody"
      responses:
        200:
          description: Standard (Un)StuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.
    put:
      tags:
        - user
      summary: Updates a user
      description: Invoke this endpoint to update a user's information.
      operationId: src.api.user.put
#      requestBody:
#        required: true
#        description: Body wrapper for the request.
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/UserBody"
      responses:
        200:
          description: Standard (Un)StuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

  /user/login:
    post:
      tags:
        - user
      summary: Checks if a user's login information is valid.
      description: Invoke this endpoint to validate a user's login information.
      operationId: src.api.user.login_post
      #      requestBody:
      #        required: true
      #        description: Body wrapper for the request.
      #        content:
      #          application/json:
      #            schema:
      #              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: Standard (Un)StuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

  /help:
    post:
      tags:
        - help
      summary: Checks What help a hacker needs from a StackOverflow page.
      description: Invoke this endpoint to retrieve information of which help a user needs.
      operationId: src.api.help.post
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageToCheck"
      responses:
        200:
          description: Standard (Un)StuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

  /tag:
    get:
      tags:
        - tag
      summary: Retrieve all the tags that contain the chars send in the parameters.
      description: Invoke this endpoint to retrieve all the tags that start, end or contain a certain chars.
      operationId: src.api.tag.get
      parameters:
        - name: prefix_tag
          in: query
          description: Specifies the chars a Skill/Tag must contain.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Standard (Un)StuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

components:
  schemas:
    APIResponse:
      type: object
      properties:
        error:
          type: boolean
          description: Whether or not the request was successfully processed or not.
        message:
          type: string
          description: Error message if the request was unsuccessful.
        response:
          type: object
          description: Contains the response data if the request was successful.

    PageToCheck:
      type: object
      properties:
        page_html:
          type: string
          description: Page HTML to scrape.
        user_id:
          type: integer
          description: User identifier.
