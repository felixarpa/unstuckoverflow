openapi: '3.0.0'

info:
  description: Asking is faster than stackOverflow if you know who to ask.
  version: '1.0'
  title: UnstuckOverflow API

servers:
  - url: http://localhost:8081
    description: Localhost endpoint.
  - url: http://35.233.84.203:8081
    description: Server endpoint.

tags:
  - name: user
    description: endpoint for managing user options.
  - name: skills
    description: endpoint for managing user skills.
  - name: help
    description: endpoint to check which kind of help a user needs
  - name: tag
    description: endpoint to obtain tags of skills.


paths:
  /user:
    get:
      tags:
        - user
      summary: Retrieve user Information
      description: Invoke this endpoint to retrieve information of a given user.
      operationId: src.api.user.get
      parameters:
        - name: user_id
          in: query
          description: Specifies the user to retrieve.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.
    post:
      tags:
        - user
      summary: Create a user
      description: Invoke this endpoint to create a new user given its information.
      operationId: src.api.user.post
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserBody"
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.
    put:
      tags:
        - user
      summary: Updates a user
      description: Invoke this endpoint to update a user's information.
      operationId: src.api.user.put
      deprecated: true
#      requestBody:
#        required: true
#        description: Body wrapper for the request.
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/UserBody"
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

  /user/login:
    post:
      tags:
        - user
      summary: Checks if a user's login information is valid
      description: Invoke this endpoint to validate a user's login information.
      operationId: src.api.user.login_post
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

  /user/skills:
    get:
      tags:
        - skills
      summary: Retrieve all the skills from a user
      description: Invoke this endpoint to obtain all the skill from a user.
      operationId: src.api.user_skills.get
      parameters:
        - name: user_id
          in: query
          description: Specifies the user to retrieve.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.
    post:
      tags:
        - skills
      summary: Create a relation between a user and a tag
      description: Invoke this endpoint to relate a user with a skill.
      operationId: src.api.user_skills.post
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkillBody"
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.
    delete:
      tags:
        - skills
      summary: Delete a relation between a user and a tag
      description: Invoke this endpoint to delete a skill from a user.
      operationId: src.api.user_skills.delete
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkillBody"
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.


  /help:
    post:
      tags:
        - help
      summary: Checks what help a hacker needs from a StackOverflow page
      description: Invoke this endpoint to retrieve information of which help a user needs.
      operationId: src.api.help.post
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageToCheck"
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

  /tag:
    get:
      tags:
        - tag
      summary: Retrieve all the tags that contain the chars send in the parameters
      description: Invoke this endpoint to retrieve all the tags that start, end or contain a certain chars.
      operationId: src.api.tag.get
      parameters:
        - name: prefix_tag
          in: query
          description: Specifies the chars a Skill/Tag must contain.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Standard UnstuckOverflow API JSON response. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

components:
  schemas:
    APIResponse:
      type: object
      properties:
        error:
          type: boolean
          description: Whether or not the request was successfully processed or not.
        message:
          type: string
          description: Error message if the request was unsuccessful.
        response:
          type: object
          description: Contains the response data if the request was successful.

    PageToCheck:
      type: object
      properties:
        page_html:
          type: string
          description: Page HTML to scrape.
        user_id:
          type: integer
          description: User identifier.

    UserBody:
      type: object
      properties:
        full_name:
          type: string
          description: User full name.
        email:
          type: string
          description: User email.
        password:
          type: string
          description: User SHA256 encoded password.
        phone_number:
          type: string
          description: User phone number.

    SkillBody:
      type: object
      properties:
        user_id:
          type: integer
          description: User identifier.
        tag_name:
          type: string
          description: Tag identifier.

    UserLogin:
      type: object
      properties:
        email:
          type: string
          description: User email.
        password:
          type: string
          description: User SHA256 encoded password.
